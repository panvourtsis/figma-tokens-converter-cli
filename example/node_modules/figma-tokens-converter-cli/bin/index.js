#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var commander_1 = require("commander");
var parseFigmaTokens_1 = __importDefault(require("./parseFigmaTokens"));
var parseJsonToCode_1 = __importDefault(require("./parseJsonToCode"));
var program = new commander_1.Command();
program
    .name('figma-tokens-converter-cli')
    .description('CLI figma design tokens utils for easy integration from figma to code.');
program
    .command('parseJsonToCode')
    .description('This command parse exported .json files and converts them to code')
    .argument('<input>', 'Input directory')
    .argument('<output>', 'Output directory to write the transformed tokens to')
    .option('-oe, --outputExtension [outputExtension]', 'The output file extension that must be transformed to', 'ts')
    .action(function (input, output, options) {
    (0, parseJsonToCode_1.default)(input, output, options);
});
program
    .command('parseFigmaTokens')
    .description('This command parse figma token .json like tokens.json and exports it to a path')
    .argument('<input>', 'Specify the .json figma file')
    .argument('<output>', 'Output directory to write the converted results')
    .option('-p, --pick <pick>', 'Pick only what is specified in the value')
    .option('-e, --expand <expand>', 'Expand properties to different files, otherwise will use the parent property')
    .option('-oe, --outputExtension <outputExtension>', 'The output file extension that must be transformed to. Defaults to json', 'json')
    .action(function (input, output, options) {
    (0, parseFigmaTokens_1.default)(input, output, options);
});
program.parse(process.argv);
